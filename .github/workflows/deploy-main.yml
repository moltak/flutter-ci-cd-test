name: ðŸ”‚ Deploy to surge

on:
  push:
    branches:
      - main
env:
  url: 'dotheal-cloud-signage-desktop-client.surge.sh'
  tag: 'latest'

jobs:
  deploy-web:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: rickstaa/action-create-tag@v1
        with:
          tag: ${{ env.tag }}
      - name: Cache Flutter dependencies
        uses: actions/cache@v3
        with:
          path: /opt/hostedtoolcache/flutter
          key: ${{ runner.OS }}-flutter-install-cache-${{ env.flutter_version }}
      - uses: subosito/flutter-action@v2
        with:
          channel: "stable"
          cache: true
          cache-key: flutter # optional, change this to force refresh cache
          cache-path: ${{ runner.tool_cache }}/flutter # optional, change this to specify the cache path
          architecture: x64 # optional, x64 or arm64
      - name: install dependencies
        run: flutter pub get
      - name: build
        run: flutter build web
      - name: Deploy to surge.sh
        uses: dswistowski/surge-sh-action@v1
        with:
          domain: ${{ env.url }}
          project: 'build/web'
          login: ${{ secrets.SURGE_LOGIN }}
          token: ${{ secrets.SURGE_TOKEN }}
      - name: Get the deploy_url
        run: echo "url => https://${{ env.url }}"

  deploy-windows:
    runs-on: windows-latest
    env:
      filename: project-${{github.ref_name}}-windows.zip
    steps:
    - uses: actions/checkout@v3
    - name: Cache Flutter dependencies
      uses: actions/cache@v3
      with:
        path: /opt/hostedtoolcache/flutter
        key: ${{ runner.OS }}-flutter-install-cache-${{ env.flutter_version }}
    - uses: subosito/flutter-action@v2
      with:
        channel: "stable"
        cache: true
        cache-key: flutter # optional, change this to force refresh cache
        cache-path: ${{ runner.tool_cache }}/flutter # optional, change this to specify the cache path
        architecture: x64 # optional, x64 or arm64
    - run: flutter pub get
    - run: flutter config --enable-windows-desktop
    - name: Build artifacts
      run: flutter build windows --release
    - name: Archive Release
      uses: thedoctor0/zip-release@main
      with:
        type: 'zip'
        filename: ${{ env.filename }}
        directory: build/windows/runner/Release
    - name: Windows Release
      id: windows_release
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        files: 'build/windows/runner/Release/${{ env.filename }}'
        tag_name: ${{ env.tag }}
    - run: echo ${{ steps.windows_release.outputs.url }}
